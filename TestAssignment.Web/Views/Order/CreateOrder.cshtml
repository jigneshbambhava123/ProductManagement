@model List<TestAssignment.Entity.Models.Product>
@{
    Layout = "_Layout";
}
<h1>Create New Order</h1>

    <div class="row m-3">
        <div class="col">
            <div class="col form-floating me-2">    

                <select class="form-select" id="modifier-group-select1" name="ModifierGroupId">
                    <option value="" selected>Select Product</option>
                    @foreach (var group in Model)
                    {
                        <option value="@group.Id" data-id="@group.Rate" >@group.Name</option>
                    }
                </select>
                <label for="modifier-group-select1">Select Product </label>
                
                <div id="selected-modifier-group1" class="mt-3" style="max-height: 300px;min-height: 300px;  overflow-x: hidden; overflow-y:auto; border:1px solid rgb(138, 135, 135);">
                     <div class="row item-header">
                        <div class="col-3 col-sm-4 ms-4">Product</div>
                        <div class="col-3 col-sm-3 text-center col-qty">Quantity</div>
                        <div class="col-4 col-sm-3 text-end col-price">Amount</div>
                    </div>
                </div>
                
                <div class="row total-row mb-2 mt-3">
                    <div class="col-8 col-sm-9 text-start fw-bold">Total</div>
                    <div class="col-4 col-sm-3 text-end total-amount"> ₹0
                    </div>
                </div>
        </div>
    </div>
    <button id="saveOrderButton" type="button" class="btn btn-primary mb-2">Create Order</button>            
    <a asp-action="User" asp-controller="Home" class="btn btn-secondary">Cancel</a>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script>
    $(document).on('change', '#modifier-group-select1', function() {
            var productId = $(this).val();
            var Price = $(this).find('option:selected').data('id');
            var productName = $(this).find('option:selected').text();
            console.log("modifierGroupId::" + productId);
                        console.log("price::" + Price); 

            console.log("additem");
            $(this).find('option:selected').css('display', 'none');
            $(this).val('');
            if (productId) {
                console.log("Loading modifiers for group: " + productId);
                console.log("modifiergroupname:" + productName);
                var newItemHtml = `
                    <div class="menu-item m-3" style=" border: 1px solid rgb(201, 190, 190); border-radius: 14px;" data-item-id="${productId }">
                        <div class="item-category row align-items-center m-2">
                            <div class="col-3 col-sm-4 accordion">
                                <div class="d-flex accordion-header">
                                    <i class="accordion collapsed" ></i>
                                    <div data-bs-toggle="modal"
                                         data-bs-target="#item-instruction-modal"
                                         data-item-id="${productId }"
                                         data-is-existing="false">${productName}</div>
                                </div>
                               
                            </div>
                            <div class="col-3 col-sm-3 col-qty text-center" style="display: flex;justify-content: center;">
                                <div class="quantity-control d-flex">
                                    <div class="d-flex justify-content-between ms-2" style="border: 1px solid #009bb6; border-radius: 5px; width: 98px; height: 42px;">
                                        <button onclick="decrementValue(this)" class="quantity-decrement" style="border: none; background: none; padding: 5px 8px; cursor: pointer;">−</button>
                                        <input type="text" class="quantity-input" value="1" style="width: 30px; text-align: center; border: none; outline: none;">
                                        <button onclick="incrementValue(this)" class="quantity-increment" style="border: none; background: none; padding: 5px 8px; cursor: pointer;">+</button>
                                    </div>
                                </div>
                            </div>
                           <div class="col-4 col-sm-3 text-end col-price">
                                <div class="item-base-price fw-bold" hidden>₹${Price}</div>
                                <div class="item-base-price1 fw-bold">₹${Price}</div>
                            </div>
                            <div class="col-2 col-sm-2 text-end col-price">
                                @* <div class="delete-icon"><i class="bi bi-trash"></i></div> *@
                            </div>
                        </div>
                    
                    </div>
                `;


                $('#selected-modifier-group1').append(newItemHtml);  
                updateOrderTotals();

            } else {
                console.log("No modifier group selected.");
            }
        });

    $(document).ready(function () {
        updateOrderTotals();

        $('#saveOrderButton').on('click', function () {
                console.log("button clicked");
                var orderData = {
                    totalAmount: parseFloat($('.total-amount').text().replace('₹', '')) || 0,
                    items: [],
                };

                $('.menu-item').each(function () {
                    var itemId = $(this).data('item-id');
                    var quantity = parseInt($(this).find('.quantity-input').val()) || 1;
                    var itemPrice = parseFloat($(this).find('.item-base-price').text().replace('₹', '')) || 0;

                    orderData.items.push({
                        ItemId: itemId,
                        Quantity: quantity,
                        ItemPrice: itemPrice,
                    });
                });

                console.log(orderData);

                let dataString = `TotalAmount=${orderData.totalAmount}`;

                orderData.items.forEach((item, index) => {
                    dataString += `&Items[${index}][ItemId]=${item.ItemId}&Items[${index}][Quantity]=${item.Quantity}&Items[${index}][ItemPrice]=${item.ItemPrice}`;
                });
                
                $.ajax({
                    url: '/Order/SaveOrder',
                    type: 'POST',
                    data: dataString, 
                    contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
                    success: function (data) {
                        if(data.success){
                            window.location.href = "http://localhost:5244/Home/User";
                            toastr.success("Order saved successfully.");
                        }else{
                            toastr.info(data.message);
                        }
                    },
                    error: function (error) {
                        console.error('Error saving order:', error);
                        alert('An error occurred while saving the order.');
                    },
                });
            
        });

        $('.selected-modifier-group1').on('click', '.bi-trash', function () {
            // Get the parent menu-item div and remove it
            $(this).closest('.menu-item').remove();

            // Optionally, you might want to recalculate and update the totals here
            updateOrderTotals();
        });
    });
    function incrementValue(button) {
            var input = $(button).siblings('.quantity-input')[0];
            input.value = parseInt(input.value) + 1;
            updateOrderTotals();
       
    }

    function decrementValue(button) {
            var input = $(button).siblings('.quantity-input')[0];
            if (parseInt(input.value) > 1) {
                input.value = parseInt(input.value) - 1;
            }
            updateOrderTotals();
       
    }


    function updateOrderTotals() {
        console.log("run"); 
        let subtotal = 0;

        $('.menu-item').each(function() {
            
            const quantity = parseInt($(this).find('.quantity-input').val()) || 1;
            const itemPrice = parseFloat($(this).find('.item-base-price').text().replace('₹', '')) || 0;
            console.log(quantity);
            console.log(itemPrice);

            const itemTotalPrice = itemPrice * quantity;
            
             // Update only the current item's total price fields
            $(this).find('.item-base-price1').text('₹' + itemTotalPrice.toFixed(2));

            subtotal += (itemPrice) * quantity;
        });

        let total = subtotal; 

        $('.total-amount').text('₹' + total.toFixed(2));
    }


    
</script>

